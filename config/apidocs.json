{
 "swagger": "2.0",
 "info": {
  "description": "fuxinzhumeng.com",
  "title": "wx-server",
  "contact": {
   "name": "yubo",
   "url": "http://fuxingzhumeng.com",
   "email": "yubo@yubo.org"
  },
  "version": "v0.0.0"
 },
 "paths": {
  "/api/v1/app/fetch-settle-detail": {
   "post": {
    "consumes": [
     "application/json"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "application"
    ],
    "summary": "fetch setle detail ",
    "operationId": "fetchSettleDetail",
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/app.fetchSettleDetailRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.app.fetchSettleDetailResponse"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/app/schedule": {
   "get": {
    "consumes": [
     "application/json"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "application"
    ],
    "summary": "get schedule data",
    "operationId": "getScheduleData",
    "parameters": [
     {
      "type": "integer",
      "name": "skuId",
      "in": "query"
     },
     {
      "type": "integer",
      "description": "staring of a week [start, end)",
      "name": "date",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.app.scheduleResponse"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/auth/authorize": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "auth"
    ],
    "summary": "获取微信登陆二维码地址",
    "operationId": "getAuthorizeInfo",
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.webapp.AuthorizerResponse"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/auth/captcha": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "auth"
    ],
    "summary": "手机验证码登陆",
    "operationId": "authCaptcha",
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/auth.captchaRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.auth.captchaResponse"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/auth/info": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "auth"
    ],
    "summary": "print auth userinfo",
    "operationId": "authInfo",
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.api.User"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/auth/login": {
   "post": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "auth"
    ],
    "summary": "login, 登陆",
    "operationId": "authLogin",
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/auth.LoginRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.api.User"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/auth/logout": {
   "post": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "auth"
    ],
    "summary": "logout, 注销",
    "operationId": "authLogout",
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/auth/signature": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "auth"
    ],
    "summary": "signature - 微信接入验证接口",
    "operationId": "authSignature",
    "parameters": [
     {
      "type": "string",
      "name": "signature",
      "in": "query"
     },
     {
      "type": "string",
      "name": "timestamp",
      "in": "query"
     },
     {
      "type": "string",
      "name": "nonce",
      "in": "query"
     },
     {
      "type": "string",
      "name": "echostr",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.array.integer"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/courses": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "course"
    ],
    "summary": "search/list courses",
    "operationId": "listCourse",
    "parameters": [
     {
      "type": "string",
      "description": "query",
      "name": "query",
      "in": "query"
     },
     {
      "maximum": 500,
      "type": "integer",
      "default": 10,
      "description": "page size",
      "name": "pageSize",
      "in": "query"
     },
     {
      "type": "integer",
      "default": 1,
      "description": "current page number, start at 1(defualt)",
      "name": "current",
      "in": "query"
     },
     {
      "type": "string",
      "description": "column name",
      "name": "sorter",
      "in": "query"
     },
     {
      "enum": [
       "asc",
       "desc"
      ],
      "type": "string",
      "description": "asc(default)/desc",
      "name": "order",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.course.listOutput"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "post": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "course"
    ],
    "summary": "create course acl(admin)",
    "operationId": "createCourse",
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/course.createRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "course"
    ],
    "summary": "delete courses acl(root)",
    "operationId": "deleteCourses",
    "parameters": [
     {
      "type": "string",
      "description": "course id",
      "name": "id",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/courses/{id}": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "course"
    ],
    "summary": "get course",
    "operationId": "getCourse",
    "parameters": [
     {
      "type": "integer",
      "description": "course id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.api.Course"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "put": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "course"
    ],
    "summary": "update course acl(admin)",
    "operationId": "updateCourse",
    "parameters": [
     {
      "type": "integer",
      "description": "course id",
      "name": "id",
      "in": "path",
      "required": true
     },
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/course.updateRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "course"
    ],
    "summary": "delete course acl(root)",
    "operationId": "deleteCourse",
    "parameters": [
     {
      "type": "integer",
      "description": "course id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/files": {
   "post": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "file"
    ],
    "summary": "create file",
    "operationId": "createFile",
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.file.uploadFileResponse"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "file"
    ],
    "summary": "delete file",
    "operationId": "deleteFile",
    "parameters": [
     {
      "type": "string",
      "description": "file path",
      "name": "filepath",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/geographic/city/{province}": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "geographic"
    ],
    "operationId": "listCity",
    "parameters": [
     {
      "type": "string",
      "description": "province",
      "name": "province",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.array.geographic.City"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/geographic/province": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "geographic"
    ],
    "operationId": "listProvince",
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.array.geographic.Province"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/goods": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "good"
    ],
    "summary": "search/list goods",
    "operationId": "listGood",
    "parameters": [
     {
      "type": "string",
      "description": "query",
      "name": "query",
      "in": "query"
     },
     {
      "maximum": 500,
      "type": "integer",
      "default": 10,
      "description": "page size",
      "name": "pageSize",
      "in": "query"
     },
     {
      "type": "integer",
      "default": 1,
      "description": "current page number, start at 1(defualt)",
      "name": "current",
      "in": "query"
     },
     {
      "type": "string",
      "description": "column name",
      "name": "sorter",
      "in": "query"
     },
     {
      "enum": [
       "asc",
       "desc"
      ],
      "type": "string",
      "description": "asc(default)/desc",
      "name": "order",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.good.listOutput"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/goods/{id}": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "good"
    ],
    "summary": "get good",
    "operationId": "getGood",
    "parameters": [
     {
      "type": "integer",
      "description": "good id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.api.Good"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/holidays": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "holiday"
    ],
    "summary": "search/list holidays",
    "operationId": "listHoliday",
    "parameters": [
     {
      "type": "string",
      "description": "query",
      "name": "query",
      "in": "query"
     },
     {
      "maximum": 500,
      "type": "integer",
      "default": 10,
      "description": "page size",
      "name": "pageSize",
      "in": "query"
     },
     {
      "type": "integer",
      "default": 1,
      "description": "current page number, start at 1(defualt)",
      "name": "current",
      "in": "query"
     },
     {
      "type": "string",
      "description": "column name",
      "name": "sorter",
      "in": "query"
     },
     {
      "enum": [
       "asc",
       "desc"
      ],
      "type": "string",
      "description": "asc(default)/desc",
      "name": "order",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.holiday.listOutput"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "post": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "holiday"
    ],
    "summary": "create holiday acl(admin)",
    "operationId": "createHoliday",
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/holiday.createRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "holiday"
    ],
    "summary": "delete holidays",
    "operationId": "deleteHolidays",
    "parameters": [
     {
      "type": "string",
      "description": "spu id",
      "name": "id",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/holidays/{id}": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "holiday"
    ],
    "summary": "get holiday",
    "operationId": "getHoliday",
    "parameters": [
     {
      "type": "integer",
      "description": "holiday id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.api.Holiday"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "holiday"
    ],
    "summary": "delete holiday acl(admin)",
    "operationId": "deleteHoliday",
    "parameters": [
     {
      "type": "integer",
      "description": "holiday id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/notices": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "notice"
    ],
    "operationId": "listNotice",
    "parameters": [
     {
      "type": "string",
      "description": "query selector",
      "name": "query",
      "in": "query"
     },
     {
      "maximum": 500,
      "type": "integer",
      "default": 10,
      "description": "page size",
      "name": "pageSize",
      "in": "query"
     },
     {
      "type": "integer",
      "default": 1,
      "description": "current page number, start at 1(defualt)",
      "name": "current",
      "in": "query"
     },
     {
      "type": "string",
      "description": "column name",
      "name": "sorter",
      "in": "query"
     },
     {
      "enum": [
       "asc",
       "desc"
      ],
      "type": "string",
      "description": "asc(default)/desc",
      "name": "order",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.notice.listOutput"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "notice"
    ],
    "summary": "delete notice",
    "operationId": "deleteNotice",
    "parameters": [
     {
      "type": "integer",
      "description": "notice id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/orders": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "order"
    ],
    "summary": "search/list orders",
    "operationId": "listOrder",
    "parameters": [
     {
      "type": "string",
      "description": "query",
      "name": "query",
      "in": "query"
     },
     {
      "maximum": 500,
      "type": "integer",
      "default": 10,
      "description": "page size",
      "name": "pageSize",
      "in": "query"
     },
     {
      "type": "integer",
      "default": 1,
      "description": "current page number, start at 1(defualt)",
      "name": "current",
      "in": "query"
     },
     {
      "type": "string",
      "description": "column name",
      "name": "sorter",
      "in": "query"
     },
     {
      "enum": [
       "asc",
       "desc"
      ],
      "type": "string",
      "description": "asc(default)/desc",
      "name": "order",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.order.listOutput"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "post": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "order"
    ],
    "summary": "create order",
    "operationId": "createOrder",
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/order.createRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "order"
    ],
    "summary": "delete orders",
    "operationId": "deleteOrders",
    "parameters": [
     {
      "type": "string",
      "description": "order id",
      "name": "id",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/orders/{id}": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "order"
    ],
    "summary": "get order",
    "operationId": "getOrder",
    "parameters": [
     {
      "type": "integer",
      "description": "order id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.api.Order"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "put": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "order"
    ],
    "summary": "update order",
    "operationId": "updateOrder",
    "parameters": [
     {
      "type": "integer",
      "description": "order id",
      "name": "id",
      "in": "path",
      "required": true
     },
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/order.updateRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "order"
    ],
    "summary": "delete order",
    "operationId": "deleteOrder",
    "parameters": [
     {
      "type": "integer",
      "description": "order id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/orgs": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "org"
    ],
    "summary": "search/list orgs",
    "operationId": "listOrg",
    "parameters": [
     {
      "type": "string",
      "description": "query",
      "name": "query",
      "in": "query"
     },
     {
      "maximum": 500,
      "type": "integer",
      "default": 10,
      "description": "page size",
      "name": "pageSize",
      "in": "query"
     },
     {
      "type": "integer",
      "default": 1,
      "description": "current page number, start at 1(defualt)",
      "name": "current",
      "in": "query"
     },
     {
      "type": "string",
      "description": "column name",
      "name": "sorter",
      "in": "query"
     },
     {
      "enum": [
       "asc",
       "desc"
      ],
      "type": "string",
      "description": "asc(default)/desc",
      "name": "order",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.org.listOutput"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "post": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "org"
    ],
    "summary": "create org acl(admin)",
    "operationId": "createOrg",
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/org.createRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "org"
    ],
    "summary": "delete orgs acl(admin)",
    "operationId": "deleteOrgs",
    "parameters": [
     {
      "type": "string",
      "description": "org id",
      "name": "id",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/orgs/{id}": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "org"
    ],
    "summary": "get org",
    "operationId": "getOrg",
    "parameters": [
     {
      "type": "integer",
      "description": "org id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.api.Org"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "put": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "org"
    ],
    "summary": "update org acl(orgAdmin)",
    "operationId": "updateOrg",
    "parameters": [
     {
      "type": "integer",
      "description": "org id",
      "name": "id",
      "in": "path",
      "required": true
     },
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/org.updateRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "org"
    ],
    "summary": "delete org acl(admin)",
    "operationId": "deleteOrg",
    "parameters": [
     {
      "type": "integer",
      "description": "org id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/payments": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "payment"
    ],
    "summary": "search/list payments",
    "operationId": "listPayment",
    "parameters": [
     {
      "type": "string",
      "description": "query",
      "name": "query",
      "in": "query"
     },
     {
      "maximum": 500,
      "type": "integer",
      "default": 10,
      "description": "page size",
      "name": "pageSize",
      "in": "query"
     },
     {
      "type": "integer",
      "default": 1,
      "description": "current page number, start at 1(defualt)",
      "name": "current",
      "in": "query"
     },
     {
      "type": "string",
      "description": "column name",
      "name": "sorter",
      "in": "query"
     },
     {
      "enum": [
       "asc",
       "desc"
      ],
      "type": "string",
      "description": "asc(default)/desc",
      "name": "order",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.payment.listOutput"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "post": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "payment"
    ],
    "summary": "create payment",
    "operationId": "createPayment",
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/payment.createRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "payment"
    ],
    "summary": "delete payments",
    "operationId": "deletePayments",
    "parameters": [
     {
      "type": "string",
      "description": "payment id",
      "name": "id",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/payments/{id}": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "payment"
    ],
    "summary": "get payment",
    "operationId": "getPayment",
    "parameters": [
     {
      "type": "integer",
      "description": "payment id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.api.Payment"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "put": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "payment"
    ],
    "summary": "update payment",
    "operationId": "updatePayment",
    "parameters": [
     {
      "type": "integer",
      "description": "payment id",
      "name": "id",
      "in": "path",
      "required": true
     },
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/payment.updateRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "payment"
    ],
    "summary": "delete payment",
    "operationId": "deletePayment",
    "parameters": [
     {
      "type": "integer",
      "description": "payment id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/refunds": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "refund"
    ],
    "summary": "search/list refunds",
    "operationId": "listRefund",
    "parameters": [
     {
      "type": "string",
      "description": "query",
      "name": "query",
      "in": "query"
     },
     {
      "maximum": 500,
      "type": "integer",
      "default": 10,
      "description": "page size",
      "name": "pageSize",
      "in": "query"
     },
     {
      "type": "integer",
      "default": 1,
      "description": "current page number, start at 1(defualt)",
      "name": "current",
      "in": "query"
     },
     {
      "type": "string",
      "description": "column name",
      "name": "sorter",
      "in": "query"
     },
     {
      "enum": [
       "asc",
       "desc"
      ],
      "type": "string",
      "description": "asc(default)/desc",
      "name": "order",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.refund.listOutput"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "post": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "refund"
    ],
    "summary": "create refund",
    "operationId": "createRefund",
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/refund.createRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "refund"
    ],
    "summary": "delete refunds",
    "operationId": "deleteRefunds",
    "parameters": [
     {
      "type": "string",
      "description": "refund id",
      "name": "id",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/refunds/{id}": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "refund"
    ],
    "summary": "get refund",
    "operationId": "getRefund",
    "parameters": [
     {
      "type": "integer",
      "description": "refund id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.api.Refund"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "put": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "refund"
    ],
    "summary": "update refund",
    "operationId": "updateRefund",
    "parameters": [
     {
      "type": "integer",
      "description": "refund id",
      "name": "id",
      "in": "path",
      "required": true
     },
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/refund.updateRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "refund"
    ],
    "summary": "delete refund",
    "operationId": "deleteRefund",
    "parameters": [
     {
      "type": "integer",
      "description": "refund id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/skus": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "sku"
    ],
    "summary": "search/list skus",
    "operationId": "listSku",
    "parameters": [
     {
      "type": "string",
      "description": "query",
      "name": "query",
      "in": "query"
     },
     {
      "maximum": 500,
      "type": "integer",
      "default": 10,
      "description": "page size",
      "name": "pageSize",
      "in": "query"
     },
     {
      "type": "integer",
      "default": 1,
      "description": "current page number, start at 1(defualt)",
      "name": "current",
      "in": "query"
     },
     {
      "type": "string",
      "description": "column name",
      "name": "sorter",
      "in": "query"
     },
     {
      "enum": [
       "asc",
       "desc"
      ],
      "type": "string",
      "description": "asc(default)/desc",
      "name": "order",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.sku.listOutput"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "post": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "sku"
    ],
    "summary": "create sku",
    "operationId": "createSku",
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/sku.createRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "sku"
    ],
    "summary": "delete skus",
    "operationId": "deleteSkus",
    "parameters": [
     {
      "type": "string",
      "description": "sku id",
      "name": "id",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/skus/{id}": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "sku"
    ],
    "summary": "get sku",
    "operationId": "getSku",
    "parameters": [
     {
      "type": "integer",
      "description": "sku id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.api.Sku"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "put": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "sku"
    ],
    "summary": "update sku",
    "operationId": "updateSku",
    "parameters": [
     {
      "type": "integer",
      "description": "sku id",
      "name": "id",
      "in": "path",
      "required": true
     },
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/sku.updateRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "sku"
    ],
    "summary": "delete sku",
    "operationId": "deleteSku",
    "parameters": [
     {
      "type": "integer",
      "description": "sku id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/spus": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "spu"
    ],
    "summary": "search/list spus",
    "operationId": "listSpu",
    "parameters": [
     {
      "type": "string",
      "description": "query",
      "name": "query",
      "in": "query"
     },
     {
      "maximum": 500,
      "type": "integer",
      "default": 10,
      "description": "page size",
      "name": "pageSize",
      "in": "query"
     },
     {
      "type": "integer",
      "default": 1,
      "description": "current page number, start at 1(defualt)",
      "name": "current",
      "in": "query"
     },
     {
      "type": "string",
      "description": "column name",
      "name": "sorter",
      "in": "query"
     },
     {
      "enum": [
       "asc",
       "desc"
      ],
      "type": "string",
      "description": "asc(default)/desc",
      "name": "order",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.spu.listOutput"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "post": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "spu"
    ],
    "summary": "create spu",
    "operationId": "createSpu",
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/spu.createRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "spu"
    ],
    "summary": "delete spu",
    "operationId": "deleteSpus",
    "parameters": [
     {
      "type": "string",
      "description": "spu id",
      "name": "id",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/spus/{id}": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "spu"
    ],
    "summary": "get spu",
    "operationId": "getSpu",
    "parameters": [
     {
      "type": "integer",
      "description": "spu id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.api.Spu"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "put": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "spu"
    ],
    "summary": "update spu",
    "operationId": "updateSpu",
    "parameters": [
     {
      "type": "integer",
      "description": "spu id",
      "name": "id",
      "in": "path",
      "required": true
     },
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/spu.updateRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "spu"
    ],
    "summary": "delete spu",
    "operationId": "deleteSpu",
    "parameters": [
     {
      "type": "integer",
      "description": "spu id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/students": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "student"
    ],
    "summary": "search/list students",
    "operationId": "listStudent",
    "parameters": [
     {
      "type": "string",
      "description": "query",
      "name": "query",
      "in": "query"
     },
     {
      "maximum": 500,
      "type": "integer",
      "default": 10,
      "description": "page size",
      "name": "pageSize",
      "in": "query"
     },
     {
      "type": "integer",
      "default": 1,
      "description": "current page number, start at 1(defualt)",
      "name": "current",
      "in": "query"
     },
     {
      "type": "string",
      "description": "column name",
      "name": "sorter",
      "in": "query"
     },
     {
      "enum": [
       "asc",
       "desc"
      ],
      "type": "string",
      "description": "asc(default)/desc",
      "name": "order",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.student.listOutput"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "post": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "student"
    ],
    "summary": "create student",
    "operationId": "createStudent",
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/student.createRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/students/{id}": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "student"
    ],
    "summary": "get student",
    "operationId": "getStudent",
    "parameters": [
     {
      "type": "integer",
      "description": "student id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.api.Student"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "put": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "student"
    ],
    "summary": "update student",
    "operationId": "updateStudent",
    "parameters": [
     {
      "type": "integer",
      "description": "student id",
      "name": "id",
      "in": "path",
      "required": true
     },
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/student.updateRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "student"
    ],
    "summary": "delete student",
    "operationId": "deleteStudent",
    "parameters": [
     {
      "type": "integer",
      "description": "student id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/teachers": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "teacher"
    ],
    "summary": "search/list teachers",
    "operationId": "listTeacher",
    "parameters": [
     {
      "type": "string",
      "description": "query",
      "name": "query",
      "in": "query"
     },
     {
      "maximum": 500,
      "type": "integer",
      "default": 10,
      "description": "page size",
      "name": "pageSize",
      "in": "query"
     },
     {
      "type": "integer",
      "default": 1,
      "description": "current page number, start at 1(defualt)",
      "name": "current",
      "in": "query"
     },
     {
      "type": "string",
      "description": "column name",
      "name": "sorter",
      "in": "query"
     },
     {
      "enum": [
       "asc",
       "desc"
      ],
      "type": "string",
      "description": "asc(default)/desc",
      "name": "order",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.teacher.listOutput"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "post": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "teacher"
    ],
    "summary": "create teacher",
    "operationId": "createTeacher",
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/teacher.createRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "teacher"
    ],
    "summary": "delete teachers",
    "operationId": "deleteTeachers",
    "parameters": [
     {
      "type": "string",
      "description": "user id",
      "name": "id",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/teachers/{id}": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "teacher"
    ],
    "summary": "get teacher",
    "operationId": "getTeacher",
    "parameters": [
     {
      "type": "integer",
      "description": "teacher id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.api.Teacher"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "put": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "teacher"
    ],
    "summary": "update teacher",
    "operationId": "updateTeacher",
    "parameters": [
     {
      "type": "integer",
      "description": "teacher id",
      "name": "id",
      "in": "path",
      "required": true
     },
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/teacher.updateRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "teacher"
    ],
    "summary": "delete teacher",
    "operationId": "deleteTeacher",
    "parameters": [
     {
      "type": "integer",
      "description": "teacher id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/users": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "user"
    ],
    "summary": "search/list users",
    "operationId": "listUser",
    "parameters": [
     {
      "type": "string",
      "description": "query",
      "name": "query",
      "in": "query"
     },
     {
      "maximum": 500,
      "type": "integer",
      "default": 10,
      "description": "page size",
      "name": "pageSize",
      "in": "query"
     },
     {
      "type": "integer",
      "default": 1,
      "description": "current page number, start at 1(defualt)",
      "name": "current",
      "in": "query"
     },
     {
      "type": "string",
      "description": "column name",
      "name": "sorter",
      "in": "query"
     },
     {
      "enum": [
       "asc",
       "desc"
      ],
      "type": "string",
      "description": "asc(default)/desc",
      "name": "order",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.user.listOutput"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "post": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "user"
    ],
    "summary": "create user acl(admin)",
    "operationId": "createUser",
    "parameters": [
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/user.createRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "user"
    ],
    "summary": "delete users acl(admin)",
    "operationId": "deleteUsers",
    "parameters": [
     {
      "type": "string",
      "description": "user id",
      "name": "id",
      "in": "query"
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/api/v1/users/{id}": {
   "get": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "user"
    ],
    "summary": "get user",
    "operationId": "getUser",
    "parameters": [
     {
      "type": "integer",
      "description": "user id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.api.User"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "put": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "user"
    ],
    "summary": "update user acl(admin)",
    "operationId": "updateUser",
    "parameters": [
     {
      "type": "integer",
      "description": "user id",
      "name": "id",
      "in": "path",
      "required": true
     },
     {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
       "$ref": "#/definitions/user.updateRequest"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   },
   "delete": {
    "consumes": [
     "application/json",
     "*/*"
    ],
    "produces": [
     "application/json",
     "*/*"
    ],
    "tags": [
     "user"
    ],
    "summary": "delete user acl(admin)",
    "operationId": "deleteUser",
    "parameters": [
     {
      "type": "integer",
      "description": "user id",
      "name": "id",
      "in": "path",
      "required": true
     }
    ],
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/__umi__.Response200"
      }
     },
     "400": {
      "description": "Bad Request",
      "schema": {
       "$ref": "#/definitions/__umi__.Response400"
      }
     }
    }
   }
  },
  "/version": {
   "get": {
    "consumes": [
     "application/json"
    ],
    "produces": [
     "application/json"
    ],
    "summary": "get the code version",
    "operationId": "getCodeVersion",
    "responses": {
     "200": {
      "description": "OK",
      "schema": {
       "$ref": "#/definitions/version.Info"
      }
     }
    }
   }
  }
 },
 "definitions": {
  "__umi__.Response200": {
   "required": [
    "success"
   ],
   "properties": {
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.Response400": {
   "required": [
    "errorCode",
    "errorMessage",
    "success"
   ],
   "properties": {
    "errorCode": {
     "type": "string"
    },
    "errorMessage": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    }
   }
  },
  "__umi__.api.Course": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/api.Course"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.api.Good": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/api.Good"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.api.Holiday": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/api.Holiday"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.api.Order": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/api.Order"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.api.Org": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/api.Org"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.api.Payment": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/api.Payment"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.api.Refund": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/api.Refund"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.api.Sku": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/api.Sku"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.api.Spu": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/api.Spu"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.api.Student": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/api.Student"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.api.Teacher": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/api.Teacher"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.api.User": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/api.User"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.app.fetchSettleDetailResponse": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/app.fetchSettleDetailResponse"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.app.scheduleResponse": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/app.scheduleResponse"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.array.geographic.City": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/geographic.City"
     }
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.array.geographic.Province": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/geographic.Province"
     }
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.array.integer": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "type": "array",
     "items": {
      "type": "integer"
     }
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.auth.captchaResponse": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/auth.captchaResponse"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.course.listOutput": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/course.listOutput"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.file.uploadFileResponse": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/file.uploadFileResponse"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.good.listOutput": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/good.listOutput"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.holiday.listOutput": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/holiday.listOutput"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.notice.listOutput": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/notice.listOutput"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.order.listOutput": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/order.listOutput"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.org.listOutput": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/org.listOutput"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.payment.listOutput": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/payment.listOutput"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.refund.listOutput": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/refund.listOutput"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.sku.listOutput": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/sku.listOutput"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.spu.listOutput": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/spu.listOutput"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.student.listOutput": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/student.listOutput"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.teacher.listOutput": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/teacher.listOutput"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.user.listOutput": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/user.listOutput"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "__umi__.webapp.AuthorizerResponse": {
   "required": [
    "success"
   ],
   "properties": {
    "data": {
     "$ref": "#/definitions/webapp.AuthorizerResponse"
    },
    "host": {
     "type": "string"
    },
    "success": {
     "type": "boolean"
    },
    "traceId": {
     "type": "string"
    }
   }
  },
  "api.Course": {
   "required": [
    "id",
    "name",
    "description",
    "images",
    "creator",
    "updatedAt",
    "createdAt"
   ],
   "properties": {
    "createdAt": {
     "type": "integer",
     "format": "int64"
    },
    "creator": {
     "type": "string"
    },
    "description": {
     "description": "课程描述",
     "type": "string"
    },
    "id": {
     "description": "课程id",
     "type": "integer",
     "format": "int64"
    },
    "images": {
     "description": "机构简介图片",
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "name": {
     "description": "课程名称",
     "type": "string"
    },
    "updatedAt": {
     "type": "integer",
     "format": "int64"
    }
   }
  },
  "api.Good": {
   "required": [
    "spuId",
    "orgId",
    "title",
    "description",
    "images",
    "video",
    "available",
    "maxLinePrice",
    "minSalePrice",
    "org",
    "teacher",
    "skuList"
   ],
   "properties": {
    "available": {
     "type": "boolean"
    },
    "description": {
     "type": "string"
    },
    "images": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "maxLinePrice": {
     "type": "integer",
     "format": "int32"
    },
    "minSalePrice": {
     "type": "integer",
     "format": "int32"
    },
    "org": {
     "$ref": "#/definitions/api.Org"
    },
    "orgId": {
     "type": "integer",
     "format": "int64"
    },
    "skuList": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/api.Sku"
     }
    },
    "spuId": {
     "type": "integer",
     "format": "int64"
    },
    "teacher": {
     "$ref": "#/definitions/api.Teacher"
    },
    "title": {
     "type": "string"
    },
    "video": {
     "type": "string"
    }
   }
  },
  "api.Holiday": {
   "required": [
    "id",
    "name",
    "date",
    "creator",
    "updatedAt",
    "createdAt"
   ],
   "properties": {
    "createdAt": {
     "type": "integer",
     "format": "int64"
    },
    "creator": {
     "type": "string"
    },
    "date": {
     "description": "date format: 2006-01-02",
     "type": "string"
    },
    "id": {
     "description": "user id",
     "type": "integer",
     "format": "int64"
    },
    "name": {
     "description": "节日名称",
     "type": "string"
    },
    "updatedAt": {
     "type": "integer",
     "format": "int64"
    }
   }
  },
  "api.Notice": {
   "required": [
    "id",
    "userName",
    "extra",
    "key",
    "read",
    "avatar",
    "title",
    "status",
    "description",
    "type",
    "datetime"
   ],
   "properties": {
    "avatar": {
     "type": "string"
    },
    "datetime": {
     "type": "integer",
     "format": "int64"
    },
    "description": {
     "type": "string"
    },
    "extra": {
     "type": "string"
    },
    "id": {
     "description": "id",
     "type": "integer",
     "format": "int64"
    },
    "key": {
     "type": "string"
    },
    "read": {
     "type": "boolean"
    },
    "status": {
     "type": "string"
    },
    "title": {
     "type": "string"
    },
    "type": {
     "type": "string"
    },
    "userName": {
     "type": "string"
    }
   }
  },
  "api.Order": {
   "required": [
    "id",
    "payment",
    "skuId",
    "sku",
    "studentId",
    "student",
    "comment",
    "status",
    "creator",
    "updatedAt",
    "createdAt"
   ],
   "properties": {
    "comment": {
     "description": "课程备注, 课堂笔记",
     "type": "string"
    },
    "createdAt": {
     "type": "integer",
     "format": "int64"
    },
    "creator": {
     "type": "string"
    },
    "id": {
     "description": "课程id",
     "type": "integer",
     "format": "int64"
    },
    "payment": {
     "description": "订单号",
     "type": "string"
    },
    "sku": {
     "description": "购买的课程镜像",
     "$ref": "#/definitions/api.Sku"
    },
    "skuId": {
     "description": "课程id",
     "type": "integer",
     "format": "int64"
    },
    "status": {
     "description": "课程状态",
     "type": "string"
    },
    "student": {
     "description": "学生id",
     "$ref": "#/definitions/api.Student"
    },
    "studentId": {
     "description": "学生id",
     "type": "string"
    },
    "updatedAt": {
     "type": "integer",
     "format": "int64"
    }
   }
  },
  "api.Org": {
   "required": [
    "id",
    "name",
    "owner",
    "ownerId",
    "native",
    "address",
    "description",
    "images",
    "payAccount",
    "creator",
    "updatedAt",
    "createdAt"
   ],
   "properties": {
    "address": {
     "description": "机构地址",
     "type": "string"
    },
    "createdAt": {
     "type": "integer",
     "format": "int64"
    },
    "creator": {
     "type": "string"
    },
    "description": {
     "description": "机构简介",
     "type": "string"
    },
    "id": {
     "description": "机构id",
     "type": "integer",
     "format": "int64"
    },
    "images": {
     "description": "机构简介图片",
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "name": {
     "description": "机构名称",
     "type": "string"
    },
    "native": {
     "description": "是否直营店",
     "type": "boolean"
    },
    "owner": {
     "description": "机构负责人",
     "type": "string"
    },
    "ownerId": {
     "description": "机构负责人id",
     "type": "integer",
     "format": "int64"
    },
    "payAccount": {
     "description": "支付方式",
     "$ref": "#/definitions/api.PayAccount"
    },
    "updatedAt": {
     "type": "integer",
     "format": "int64"
    }
   }
  },
  "api.PayAccount": {
   "required": [
    "id",
    "userId",
    "type",
    "accountNo",
    "attr1",
    "attr2"
   ],
   "properties": {
    "accountNo": {
     "description": "账号",
     "type": "string"
    },
    "attr1": {
     "description": "附加字段1",
     "type": "string"
    },
    "attr2": {
     "description": "附加字段2",
     "type": "string"
    },
    "id": {
     "description": "pay account id",
     "type": "integer",
     "format": "int64"
    },
    "type": {
     "description": "付款类型",
     "type": "string"
    },
    "userId": {
     "description": "用户id",
     "type": "integer",
     "format": "int64"
    }
   }
  },
  "api.Payment": {
   "required": [
    "id",
    "name",
    "openid",
    "provider",
    "amountTotal",
    "amountCurrency",
    "description",
    "time_expire",
    "attach",
    "goods_tag",
    "limit_pay",
    "support_fapiao",
    "detail",
    "scene_info",
    "settle_info",
    "refund",
    "status",
    "updatedAt",
    "createdAt"
   ],
   "properties": {
    "amountCurrency": {
     "type": "string"
    },
    "amountTotal": {
     "type": "integer",
     "format": "int64"
    },
    "attach": {
     "description": "附加数据",
     "type": "string"
    },
    "createdAt": {
     "type": "integer",
     "format": "int64"
    },
    "description": {
     "description": "商品描述",
     "type": "string"
    },
    "detail": {
     "type": "string"
    },
    "goods_tag": {
     "description": "商品标记，代金券或立减优惠功能的参数。",
     "type": "string"
    },
    "id": {
     "description": "id",
     "type": "integer",
     "format": "int64"
    },
    "limit_pay": {
     "description": "指定支付方式",
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "name": {
     "description": "trade_no",
     "type": "string"
    },
    "openid": {
     "type": "string"
    },
    "provider": {
     "type": "string"
    },
    "refund": {
     "description": "退款单号",
     "type": "string"
    },
    "scene_info": {
     "type": "string"
    },
    "settle_info": {
     "type": "string"
    },
    "status": {
     "type": "string"
    },
    "support_fapiao": {
     "type": "boolean"
    },
    "time_expire": {
     "description": "订单失效时间，格式为rfc3339格式",
     "type": "integer",
     "format": "int64"
    },
    "updatedAt": {
     "type": "integer",
     "format": "int64"
    }
   }
  },
  "api.Refund": {
   "required": [
    "id",
    "name",
    "payment",
    "status",
    "creator",
    "updatedAt",
    "createdAt"
   ],
   "properties": {
    "createdAt": {
     "type": "integer",
     "format": "int64"
    },
    "creator": {
     "type": "string"
    },
    "id": {
     "description": "id",
     "type": "integer",
     "format": "int64"
    },
    "name": {
     "type": "string"
    },
    "payment": {
     "description": "订单号",
     "type": "string"
    },
    "status": {
     "type": "string"
    },
    "updatedAt": {
     "type": "integer",
     "format": "int64"
    }
   }
  },
  "api.ScheduleSchema": {
   "required": [
    "workDays",
    "courseDuration",
    "amStart",
    "amNum",
    "pmStart",
    "pmNum"
   ],
   "properties": {
    "amNum": {
     "description": "上午几节课",
     "type": "integer",
     "format": "int32"
    },
    "amStart": {
     "description": "上午开课时间",
     "type": "integer",
     "format": "int64"
    },
    "courseDuration": {
     "description": "每节课市场(包括课间休息)",
     "type": "integer",
     "format": "int64"
    },
    "pmNum": {
     "description": "下午几节课",
     "type": "integer",
     "format": "int32"
    },
    "pmStart": {
     "description": "下午开课时间",
     "type": "integer",
     "format": "int64"
    },
    "workDays": {
     "description": "每周工作日",
     "type": "array",
     "items": {
      "type": "integer"
     }
    }
   }
  },
  "api.Sku": {
   "required": [
    "id",
    "spuId",
    "name",
    "available",
    "courseId",
    "courseName",
    "price",
    "salePrice",
    "count",
    "creator",
    "updatedAt",
    "createdAt"
   ],
   "properties": {
    "available": {
     "description": "available",
     "type": "boolean"
    },
    "count": {
     "description": "课程数量",
     "type": "integer",
     "format": "int32"
    },
    "courseId": {
     "description": "course id",
     "type": "integer",
     "format": "int64"
    },
    "courseName": {
     "description": "course name",
     "type": "string"
    },
    "createdAt": {
     "type": "integer",
     "format": "int64"
    },
    "creator": {
     "type": "string"
    },
    "id": {
     "description": "课程id",
     "type": "integer",
     "format": "int64"
    },
    "name": {
     "description": "课程标题",
     "type": "string"
    },
    "price": {
     "description": "每节课价格，单位: 分",
     "type": "integer",
     "format": "int32"
    },
    "salePrice": {
     "description": "每节课折扣价格，单位: 分",
     "type": "integer",
     "format": "int32"
    },
    "spuId": {
     "description": "商品id",
     "type": "integer",
     "format": "int64"
    },
    "updatedAt": {
     "type": "integer",
     "format": "int64"
    }
   }
  },
  "api.Spu": {
   "required": [
    "id",
    "name",
    "description",
    "available",
    "maxLinePrice",
    "minSalePrice",
    "skuTotal",
    "images",
    "orgId",
    "org",
    "ownerId",
    "teacherId",
    "teacher",
    "creator",
    "updatedAt",
    "createdAt"
   ],
   "properties": {
    "available": {
     "description": "available",
     "type": "boolean"
    },
    "createdAt": {
     "type": "integer",
     "format": "int64"
    },
    "creator": {
     "type": "string"
    },
    "description": {
     "description": "商品描述",
     "type": "string"
    },
    "id": {
     "description": "spu id",
     "type": "integer",
     "format": "int64"
    },
    "images": {
     "description": "简介图片",
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "maxLinePrice": {
     "description": "max line price",
     "type": "integer",
     "format": "int32"
    },
    "minSalePrice": {
     "description": "min sale Price",
     "type": "integer",
     "format": "int32"
    },
    "name": {
     "description": "商品标题",
     "type": "string"
    },
    "org": {
     "description": "org",
     "$ref": "#/definitions/api.Org"
    },
    "orgId": {
     "description": "OrgId",
     "type": "integer",
     "format": "int64"
    },
    "ownerId": {
     "description": "机构负责人id",
     "type": "integer",
     "format": "int64"
    },
    "skuTotal": {
     "type": "integer",
     "format": "int32"
    },
    "teacher": {
     "description": "teacher",
     "$ref": "#/definitions/api.Teacher"
    },
    "teacherId": {
     "description": "teacher id",
     "type": "integer",
     "format": "int64"
    },
    "updatedAt": {
     "type": "integer",
     "format": "int64"
    }
   }
  },
  "api.Student": {
   "required": [
    "id",
    "name",
    "displayName",
    "owner",
    "isDefault",
    "phone",
    "idNum",
    "creator",
    "updatedAt",
    "createdAt"
   ],
   "properties": {
    "createdAt": {
     "type": "integer",
     "format": "int64"
    },
    "creator": {
     "type": "string"
    },
    "displayName": {
     "description": "学生显示名称",
     "type": "string"
    },
    "id": {
     "description": "id",
     "type": "integer",
     "format": "int64"
    },
    "idNum": {
     "description": "学生身份证",
     "type": "string"
    },
    "isDefault": {
     "description": "is default",
     "type": "integer",
     "format": "int32"
    },
    "name": {
     "description": "学生账号名",
     "type": "string"
    },
    "owner": {
     "description": "家长",
     "type": "string"
    },
    "phone": {
     "type": "string"
    },
    "updatedAt": {
     "type": "integer",
     "format": "int64"
    }
   }
  },
  "api.Teacher": {
   "required": [
    "id",
    "name",
    "userId",
    "userName",
    "orgId",
    "orgName",
    "owner",
    "ownerId",
    "description",
    "images",
    "idNumber",
    "workingYears",
    "courseFee",
    "courseTime",
    "maxStudents",
    "percentage",
    "creator",
    "updatedAt",
    "createdAt",
    "workDays",
    "courseDuration",
    "amStart",
    "amNum",
    "pmStart",
    "pmNum",
    "scheduleSchema"
   ],
   "properties": {
    "amNum": {
     "description": "上午几节课",
     "type": "integer",
     "format": "integer"
    },
    "amStart": {
     "description": "上午开课时间",
     "type": "string"
    },
    "courseDuration": {
     "description": "每节课市场(包括课间休息)",
     "type": "integer",
     "format": "int32"
    },
    "courseFee": {
     "description": "课程收费， 单位分/小时",
     "type": "integer",
     "format": "int32"
    },
    "courseTime": {
     "description": "课程时长",
     "type": "integer",
     "format": "int32"
    },
    "createdAt": {
     "type": "integer",
     "format": "int64"
    },
    "creator": {
     "type": "string"
    },
    "description": {
     "description": "简介",
     "type": "string"
    },
    "id": {
     "description": "老师id",
     "type": "integer",
     "format": "int64"
    },
    "idNumber": {
     "description": "身份证",
     "type": "string"
    },
    "images": {
     "description": "图片简介",
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "maxStudents": {
     "description": "最多学生人数",
     "type": "integer",
     "format": "int32"
    },
    "name": {
     "description": "老师名称",
     "type": "string"
    },
    "orgId": {
     "description": "所属机构Id",
     "type": "integer",
     "format": "int64"
    },
    "orgName": {
     "description": "所属机构",
     "type": "string"
    },
    "owner": {
     "description": "机构负责人",
     "type": "string"
    },
    "ownerId": {
     "description": "机构负责人id",
     "type": "integer",
     "format": "int64"
    },
    "percentage": {
     "description": "提成比例 1~100",
     "type": "integer",
     "format": "int32"
    },
    "pmNum": {
     "description": "下午几节课",
     "type": "integer",
     "format": "integer"
    },
    "pmStart": {
     "description": "下午开课时间",
     "type": "string"
    },
    "scheduleSchema": {
     "$ref": "#/definitions/api.ScheduleSchema"
    },
    "updatedAt": {
     "type": "integer",
     "format": "int64"
    },
    "userId": {
     "description": "用户Id",
     "type": "integer",
     "format": "int64"
    },
    "userName": {
     "description": "用户名",
     "type": "string"
    },
    "workDays": {
     "description": "每周工作日",
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "workingYears": {
     "description": "工作年限",
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "api.User": {
   "required": [
    "id",
    "name",
    "unionid",
    "nickname",
    "groups",
    "sex",
    "isRoot",
    "isAdmin",
    "isOrgAdmin",
    "isTeacher",
    "address",
    "avatar",
    "wOpenid",
    "mOpenid",
    "email",
    "profile",
    "phone",
    "accountNo",
    "shareNo",
    "introducer",
    "creator",
    "payAccount",
    "country",
    "province",
    "city",
    "updatedAt",
    "createdAt"
   ],
   "properties": {
    "accountNo": {
     "description": "收款账号",
     "type": "string"
    },
    "address": {
     "type": "string"
    },
    "avatar": {
     "type": "string"
    },
    "city": {
     "type": "string"
    },
    "country": {
     "type": "string"
    },
    "createdAt": {
     "type": "integer",
     "format": "int64"
    },
    "creator": {
     "type": "string"
    },
    "email": {
     "type": "string"
    },
    "groups": {
     "description": "所在分组",
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "id": {
     "description": "user id",
     "type": "integer",
     "format": "int64"
    },
    "introducer": {
     "description": "介绍人, user.Name",
     "type": "string"
    },
    "isAdmin": {
     "description": "管理员",
     "type": "boolean"
    },
    "isOrgAdmin": {
     "description": "机构管理员",
     "type": "boolean"
    },
    "isRoot": {
     "description": "超级管理员",
     "type": "boolean"
    },
    "isTeacher": {
     "description": "教师",
     "type": "boolean"
    },
    "mOpenid": {
     "description": "miniprogram openid",
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "nickname": {
     "description": "别名",
     "type": "string"
    },
    "payAccount": {
     "description": "支付方式",
     "$ref": "#/definitions/api.PayAccount"
    },
    "phone": {
     "description": "手机号",
     "type": "string"
    },
    "profile": {
     "type": "string"
    },
    "province": {
     "type": "string"
    },
    "sex": {
     "description": "1为男性，2为女性",
     "type": "integer",
     "format": "int32"
    },
    "shareNo": {
     "description": "对外分享号",
     "type": "string"
    },
    "unionid": {
     "description": "app在微信里的 unionid 编号",
     "type": "string"
    },
    "updatedAt": {
     "type": "integer",
     "format": "int64"
    },
    "wOpenid": {
     "description": "website openid",
     "type": "string"
    }
   }
  },
  "app.Good": {
   "required": [
    "GoodRequest",
    "title",
    "image",
    "price",
    "num",
    "orgName",
    "totalSalePrice",
    "totalPromionAmount",
    "totalGoodCount",
    "totalPayAmount",
    "settleType"
   ],
   "properties": {
    "GoodRequest": {
     "$ref": "#/definitions/app.GoodRequest"
    },
    "image": {
     "type": "string"
    },
    "num": {
     "type": "integer",
     "format": "int32"
    },
    "orgName": {
     "type": "string"
    },
    "price": {
     "type": "integer",
     "format": "int32"
    },
    "settleType": {
     "type": "integer",
     "format": "int32"
    },
    "title": {
     "type": "string"
    },
    "totalGoodCount": {
     "type": "integer",
     "format": "int32"
    },
    "totalPayAmount": {
     "type": "integer",
     "format": "int32"
    },
    "totalPromionAmount": {
     "type": "integer",
     "format": "int32"
    },
    "totalSalePrice": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "app.GoodRequest": {
   "required": [
    "quantity",
    "spuId",
    "skuId",
    "checked"
   ],
   "properties": {
    "checked": {
     "type": "boolean"
    },
    "quantity": {
     "type": "integer",
     "format": "int32"
    },
    "skuId": {
     "type": "integer",
     "format": "int64"
    },
    "spuId": {
     "type": "integer",
     "format": "int64"
    }
   }
  },
  "app.Schedule": {
   "required": [
    "checked"
   ],
   "properties": {
    "checked": {
     "type": "boolean"
    }
   }
  },
  "app.ScheduleCourse": {
   "required": [
    "start",
    "stop"
   ],
   "properties": {
    "start": {
     "type": "integer",
     "format": "int64"
    },
    "stop": {
     "type": "integer",
     "format": "int64"
    }
   }
  },
  "app.ScheduleDay": {
   "required": [
    "date",
    "course",
    "bookedCourse"
   ],
   "properties": {
    "bookedCourse": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/app.ScheduleCourse"
     }
    },
    "course": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/app.ScheduleCourse"
     }
    },
    "date": {
     "type": "integer",
     "format": "int64"
    }
   }
  },
  "app.Student": {
   "required": [
    "idNum",
    "creator",
    "isDefault",
    "phone",
    "updatedAt",
    "createdAt",
    "id",
    "name",
    "displayName",
    "owner",
    "checked"
   ],
   "properties": {
    "checked": {
     "type": "boolean"
    },
    "createdAt": {
     "type": "integer",
     "format": "int64"
    },
    "creator": {
     "type": "string"
    },
    "displayName": {
     "description": "学生显示名称",
     "type": "string"
    },
    "id": {
     "description": "id",
     "type": "integer",
     "format": "int64"
    },
    "idNum": {
     "description": "学生身份证",
     "type": "string"
    },
    "isDefault": {
     "description": "is default",
     "type": "integer",
     "format": "int32"
    },
    "name": {
     "description": "学生账号名",
     "type": "string"
    },
    "owner": {
     "description": "家长",
     "type": "string"
    },
    "phone": {
     "type": "string"
    },
    "updatedAt": {
     "type": "integer",
     "format": "int64"
    }
   }
  },
  "app.fetchSettleDetailRequest": {
   "required": [
    "good",
    "student",
    "schedule"
   ],
   "properties": {
    "good": {
     "$ref": "#/definitions/app.Good"
    },
    "schedule": {
     "$ref": "#/definitions/app.Schedule"
    },
    "student": {
     "$ref": "#/definitions/app.Student"
    }
   }
  },
  "app.fetchSettleDetailResponse": {
   "properties": {
    "good": {
     "$ref": "#/definitions/app.Good"
    },
    "schedule": {
     "$ref": "#/definitions/app.Schedule"
    },
    "student": {
     "$ref": "#/definitions/app.Student"
    }
   }
  },
  "app.scheduleResponse": {
   "required": [
    "date"
   ],
   "properties": {
    "date": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/app.ScheduleDay"
     }
    }
   }
  },
  "auth.LoginRequest": {
   "required": [
    "type",
    "autoLogin",
    "username",
    "password",
    "phone",
    "captcha",
    "code",
    "state"
   ],
   "properties": {
    "autoLogin": {
     "description": "自动登陆",
     "type": "boolean"
    },
    "captcha": {
     "description": "手机验证码",
     "type": "string"
    },
    "code": {
     "description": "oauth2 code, https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/login.html",
     "type": "string"
    },
    "password": {
     "type": "string"
    },
    "phone": {
     "description": "手机号，用于手机验证码登陆",
     "type": "string"
    },
    "state": {
     "description": "oauth2 state",
     "type": "string"
    },
    "type": {
     "description": "登陆类型, weixin, password, phone",
     "type": "string"
    },
    "username": {
     "type": "string"
    }
   }
  },
  "auth.captchaRequest": {
   "required": [
    "phone"
   ],
   "properties": {
    "phone": {
     "type": "string"
    }
   }
  },
  "auth.captchaResponse": {
   "required": [
    "fakeCaptcha"
   ],
   "properties": {
    "fakeCaptcha": {
     "type": "string"
    }
   }
  },
  "course.createRequest": {
   "required": [
    "name"
   ],
   "properties": {
    "name": {
     "type": "string"
    }
   }
  },
  "course.listOutput": {
   "required": [
    "list",
    "total"
   ],
   "properties": {
    "list": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/api.Course"
     }
    },
    "total": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "course.updateRequest": {
   "required": [
    "description",
    "images"
   ],
   "properties": {
    "description": {
     "description": "课程描述",
     "type": "string"
    },
    "images": {
     "description": "简介图片",
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "file.uploadFileResponse": {
   "required": [
    "filepaths"
   ],
   "properties": {
    "filepaths": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "geographic.City": {
   "required": [
    "id",
    "name",
    "province"
   ],
   "properties": {
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "province": {
     "type": "string"
    }
   }
  },
  "geographic.Province": {
   "required": [
    "id",
    "name"
   ],
   "properties": {
    "id": {
     "type": "string"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "good.listOutput": {
   "required": [
    "list",
    "total"
   ],
   "properties": {
    "list": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/api.Good"
     }
    },
    "total": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "holiday.createRequest": {
   "required": [
    "name",
    "dateRange"
   ],
   "properties": {
    "dateRange": {
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "name": {
     "type": "string"
    }
   }
  },
  "holiday.listOutput": {
   "required": [
    "list",
    "total"
   ],
   "properties": {
    "list": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/api.Holiday"
     }
    },
    "total": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "notice.listOutput": {
   "required": [
    "list",
    "total"
   ],
   "properties": {
    "list": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/api.Notice"
     }
    },
    "total": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "order.createRequest": {
   "required": [
    "id",
    "name"
   ],
   "properties": {
    "id": {
     "type": "integer",
     "format": "int64"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "order.listOutput": {
   "required": [
    "list",
    "total"
   ],
   "properties": {
    "list": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/api.Order"
     }
    },
    "total": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "order.updateRequest": {},
  "org.createRequest": {
   "required": [
    "name"
   ],
   "properties": {
    "name": {
     "type": "string"
    }
   }
  },
  "org.listOutput": {
   "required": [
    "list",
    "total"
   ],
   "properties": {
    "list": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/api.Org"
     }
    },
    "total": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "org.updateRequest": {
   "required": [
    "name",
    "ownerId",
    "native",
    "address",
    "description",
    "images",
    "payAccount"
   ],
   "properties": {
    "address": {
     "description": "机构地址",
     "type": "string"
    },
    "description": {
     "description": "机构简介",
     "type": "string"
    },
    "images": {
     "description": "机构简介图片",
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "name": {
     "description": "机构名称",
     "type": "string"
    },
    "native": {
     "description": "是否直营店",
     "type": "boolean"
    },
    "ownerId": {
     "description": "机构负责人id",
     "type": "integer",
     "format": "int64"
    },
    "payAccount": {
     "description": "支付方式",
     "$ref": "#/definitions/api.PayAccount"
    }
   }
  },
  "payment.createRequest": {
   "required": [
    "name"
   ],
   "properties": {
    "name": {
     "type": "string"
    }
   }
  },
  "payment.listOutput": {
   "required": [
    "list",
    "total"
   ],
   "properties": {
    "list": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/api.Payment"
     }
    },
    "total": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "payment.updateRequest": {},
  "refund.createRequest": {
   "required": [
    "name"
   ],
   "properties": {
    "name": {
     "type": "string"
    }
   }
  },
  "refund.listOutput": {
   "required": [
    "list",
    "total"
   ],
   "properties": {
    "list": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/api.Refund"
     }
    },
    "total": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "refund.updateRequest": {},
  "sku.createRequest": {
   "required": [
    "name",
    "spuId",
    "courseId"
   ],
   "properties": {
    "courseId": {
     "description": "course id",
     "type": "integer",
     "format": "int64"
    },
    "name": {
     "type": "string"
    },
    "spuId": {
     "description": "商品id",
     "type": "integer",
     "format": "int64"
    }
   }
  },
  "sku.listOutput": {
   "required": [
    "list",
    "total"
   ],
   "properties": {
    "list": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/api.Sku"
     }
    },
    "total": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "sku.updateRequest": {
   "required": [
    "price",
    "salePrice",
    "count",
    "available"
   ],
   "properties": {
    "available": {
     "description": "available",
     "type": "boolean"
    },
    "count": {
     "description": "课程数量",
     "type": "integer",
     "format": "int32"
    },
    "price": {
     "description": "每节课价格，单位: 分",
     "type": "integer",
     "format": "int32"
    },
    "salePrice": {
     "description": "每节课折扣价格，单位: 分",
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "spu.createRequest": {
   "required": [
    "name",
    "teacherId",
    "orgId"
   ],
   "properties": {
    "name": {
     "type": "string"
    },
    "orgId": {
     "type": "integer",
     "format": "int64"
    },
    "teacherId": {
     "type": "integer",
     "format": "int64"
    }
   }
  },
  "spu.listOutput": {
   "required": [
    "list",
    "total"
   ],
   "properties": {
    "list": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/api.Spu"
     }
    },
    "total": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "spu.updateRequest": {
   "required": [
    "name",
    "description",
    "available",
    "images"
   ],
   "properties": {
    "available": {
     "description": "available",
     "type": "boolean"
    },
    "description": {
     "description": "商品描述",
     "type": "string"
    },
    "images": {
     "description": "简介图片",
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "name": {
     "description": "商品标题",
     "type": "string"
    }
   }
  },
  "student.createRequest": {
   "required": [
    "name",
    "phone",
    "isDefault"
   ],
   "properties": {
    "isDefault": {
     "description": "default",
     "type": "integer",
     "format": "int32"
    },
    "name": {
     "type": "string"
    },
    "phone": {
     "type": "string"
    }
   }
  },
  "student.listOutput": {
   "required": [
    "list",
    "total"
   ],
   "properties": {
    "list": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/api.Student"
     }
    },
    "total": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "student.updateRequest": {
   "required": [
    "id",
    "name"
   ],
   "properties": {
    "id": {
     "type": "integer",
     "format": "int64"
    },
    "name": {
     "type": "string"
    }
   }
  },
  "teacher.createRequest": {
   "required": [
    "name",
    "userId",
    "orgId"
   ],
   "properties": {
    "name": {
     "description": "老师名称",
     "type": "string"
    },
    "orgId": {
     "description": "所属机构Id",
     "type": "integer",
     "format": "int64"
    },
    "userId": {
     "description": "用户Id",
     "type": "integer",
     "format": "int64"
    }
   }
  },
  "teacher.listOutput": {
   "required": [
    "list",
    "total"
   ],
   "properties": {
    "list": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/api.Teacher"
     }
    },
    "total": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "teacher.updateRequest": {
   "required": [
    "name",
    "description",
    "images",
    "idNumber",
    "workDays",
    "courseDuration",
    "amStart",
    "amNum",
    "pmStart",
    "pmNum",
    "workingYears",
    "courseFee",
    "courseTime",
    "maxStudents",
    "percentage"
   ],
   "properties": {
    "amNum": {
     "description": "上午几节课",
     "type": "integer",
     "format": "integer"
    },
    "amStart": {
     "description": "上午开课时间",
     "type": "string"
    },
    "courseDuration": {
     "description": "每节课市场(包括课间休息)",
     "type": "integer",
     "format": "int32"
    },
    "courseFee": {
     "description": "课程收费， 单位分/小时",
     "type": "integer",
     "format": "int32"
    },
    "courseTime": {
     "description": "课程时长",
     "type": "integer",
     "format": "int32"
    },
    "description": {
     "description": "简介",
     "type": "string"
    },
    "idNumber": {
     "description": "身份证",
     "type": "string"
    },
    "images": {
     "description": "图片简介",
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "maxStudents": {
     "description": "最多学生人数",
     "type": "integer",
     "format": "int32"
    },
    "name": {
     "description": "老师名称",
     "type": "string"
    },
    "percentage": {
     "description": "提成比例 1~100",
     "type": "integer",
     "format": "int32"
    },
    "pmNum": {
     "description": "下午几节课",
     "type": "integer",
     "format": "integer"
    },
    "pmStart": {
     "description": "下午开课时间",
     "type": "string"
    },
    "workDays": {
     "description": "每周工作日",
     "type": "array",
     "items": {
      "type": "string"
     }
    },
    "workingYears": {
     "description": "工作年限",
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "user.createRequest": {
   "required": [
    "name"
   ],
   "properties": {
    "name": {
     "type": "string"
    }
   }
  },
  "user.listOutput": {
   "required": [
    "list",
    "total"
   ],
   "properties": {
    "list": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/api.User"
     }
    },
    "total": {
     "type": "integer",
     "format": "int32"
    }
   }
  },
  "user.updateRequest": {
   "required": [
    "address",
    "email",
    "profile",
    "phone",
    "avatar",
    "nickname",
    "isRoot",
    "isAdmin",
    "isOrgAdmin",
    "isTeacher",
    "country",
    "province",
    "city"
   ],
   "properties": {
    "address": {
     "description": "家庭住址",
     "type": "string"
    },
    "avatar": {
     "type": "string"
    },
    "city": {
     "type": "string"
    },
    "country": {
     "type": "string"
    },
    "email": {
     "description": "email",
     "type": "string"
    },
    "isAdmin": {
     "type": "boolean"
    },
    "isOrgAdmin": {
     "type": "boolean"
    },
    "isRoot": {
     "type": "boolean"
    },
    "isTeacher": {
     "type": "boolean"
    },
    "nickname": {
     "type": "string"
    },
    "phone": {
     "description": "手机号",
     "type": "string"
    },
    "profile": {
     "description": "profile",
     "type": "string"
    },
    "province": {
     "type": "string"
    }
   }
  },
  "version.Info": {
   "required": [
    "major",
    "minor",
    "gitVersion",
    "gitCommit",
    "gitTreeState",
    "buildDate",
    "goVersion",
    "compiler",
    "platform"
   ],
   "properties": {
    "buildDate": {
     "type": "string"
    },
    "compiler": {
     "type": "string"
    },
    "gitCommit": {
     "type": "string"
    },
    "gitTreeState": {
     "type": "string"
    },
    "gitVersion": {
     "type": "string"
    },
    "goVersion": {
     "type": "string"
    },
    "major": {
     "type": "string"
    },
    "minor": {
     "type": "string"
    },
    "platform": {
     "type": "string"
    }
   }
  },
  "webapp.AuthorizerResponse": {
   "required": [
    "scope",
    "state",
    "appid"
   ],
   "properties": {
    "appid": {
     "type": "string"
    },
    "scope": {
     "type": "string"
    },
    "state": {
     "type": "string"
    }
   }
  }
 },
 "tags": [
  {
   "description": "authorization/authentication",
   "name": "auth"
  },
  {
   "description": "app",
   "name": "app"
  },
  {
   "description": "good",
   "name": "good"
  },
  {
   "description": "course",
   "name": "course"
  },
  {
   "description": "order",
   "name": "order"
  },
  {
   "description": "org",
   "name": "org"
  },
  {
   "description": "holiday",
   "name": "holiday"
  },
  {
   "description": "payment",
   "name": "payment"
  },
  {
   "description": "refund",
   "name": "refund"
  },
  {
   "description": "sku",
   "name": "sku"
  },
  {
   "description": "spu",
   "name": "spu"
  },
  {
   "description": "student",
   "name": "student"
  },
  {
   "description": "teacher",
   "name": "teacher"
  },
  {
   "description": "user",
   "name": "user"
  },
  {
   "description": "file",
   "name": "file"
  },
  {
   "description": "notice",
   "name": "notice"
  },
  {
   "description": "geographic",
   "name": "geographic"
  }
 ]
}